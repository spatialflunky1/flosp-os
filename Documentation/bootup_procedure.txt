1: 16-bit initialization:
    A: Setup the segment registers
    B: Setup the stack
    C: Initialize the video mode (80x25 greyscale)
2: Use bios routine 0x13 to load next 2 sectors directly next in memory (0x7E00, 512/1 sect. after 0x7C00)
3: Switch to 32-bit protected mode:
    A: Disable interrupts
    B: Load the 32-bit GDT
    C: Set the protected mode bit in CR0
    D: Re-setup the segment registers with respect to the new data segment
    E: Re-setup the stack to a new position
4: Jump to the next sector outside of the boot sector
5: Check for 64-bit processing capability:
    A: Check for CPUID instruction
    B: Check for extended functions of the CPUID instruction
    C: Test for the LM-bit with the extended features of the CPUID instruction 
6: Enable the A20 addressing line:
    A: Check if the A20 line is already enabled
    B: Attempt to enable the A20 line using the keyboard I/O method
    C: Test if enabled
    D: If not enabled try the FAST A20 Gate method
    E: Test if enabled
7: Switch to 64-bit long mode:
    A: Set up paging:
        A: Clear the page tables
        B: Setup the page tables (maps PML4T[0] to PDPT and so on)
        C: Itentity map the first two Mb
            Set the first two bits (Present & RW) of each table entry
        D: Enable PAE paging
    B: Set the LM-bit of MSR (Model Specific Register) number 0xC0000080
    C: Enable Paging
    D: Load the 64 bit GDT
    E: Re-setup the segment registers with respect to the new data segment 
